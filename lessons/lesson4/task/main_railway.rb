# Задание:

#+ Разбить программу на отдельные классы (каждый класс в отдельном файле)
# Разделить поезда на два типа PassengerTrain и CargoTrain, сделать родителя
# для классов, который будет содержать общие методы и свойства Определить,
# какие методы могут быть помещены в private/protected и вынести их в такую
# секцию. В комментарии к методу обосновать, почему он был вынесен в
# private/protected 
#Вагоны теперь делятся на грузовые и пассажирские
# (отдельные классы). К пассажирскому поезду можно прицепить только
# пассажирские, к грузовому - грузовые.  При добавлении вагона к поезду,
# объект вагона должен передаваться как аругмент метода и сохраняться во
# внутреннем массиве поезда, в отличие от предыдущего задания, где мы считали
# только кол-во вагонов. Параметр конструктора "кол-во вагонов" при этом можно
# удалить.

# Добавить текстовый интерфейс:

# Создать программу в файле main.rb, которая будет позволять пользователю через текстовый интерфейс делать следующее:
#      - Создавать станции
#      - Создавать поезда
#      - Создавать маршруты и управлять станциями в нем (добавлять, удалять)
#      - Назначать маршрут поезду
#      - Добавлять вагоны к поезду
#      - Отцеплять вагоны от поезда
#      - Перемещать поезд по маршруту вперед и назад
#      - Просматривать список станций и список поездов на станции

# В качестве ответа приложить ссылку на репозиторий с решением

#l4-1
require_relative 'station'
require_relative 'route'
require_relative 'train'
require_relative 'passenger_train'
require_relative 'cargo_train'
require_relative 'carriage'
require_relative 'passenger_carriage'
require_relative 'cargo_carriage'

t1 = Train.new(101,11)

p1 = Train.new(201,21)

t1.carriage_add(55)
t1.carriage_add(77)

p1.carriage_add(33)
p1.carriage_add(131)

puts "1 #{Carriage.show_carriages}"

Train.train_add_to_trains(t1)
Train.train_add_to_trains(p1)

puts "2 #{Train.trains_show_all}"
